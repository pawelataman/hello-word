services:

  reverse-proxy:
    image: traefik:v3.2
    ports:
      - mode: host
        protocol: tcp
        published: 80
        target: 80
      - mode: host
        protocol: tcp
        published: 443
        target: 443
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "letsencrypt:/letsencrypt"

    command:
      - "--api=true"
      - "--api.dashboard=true"
      - "--entryPoints.web.address=:80"
      - "--entryPoints.web.http.redirections.entryPoint.to=websecure"
      - "--entryPoints.web.http.redirections.entryPoint.scheme=https"
      - "--entryPoints.websecure.address=:443"
      - "--providers.docker=true"
      - "--providers.docker.exposedByDefault=false"
      - "--certificatesResolvers.myresolver.acme.email=tytanus97@gmail.com"
      - "--certificatesResolvers.myresolver.acme.storage=/letsencrypt/acme.json"
      - "--certificatesResolvers.myresolver.acme.tlsChallenge=true"
      - "--log.level=DEBUG"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.rule=Host(`${HOST_NAME}`) && (PathPrefix(`/api`) || PathPrefix(`/dashboard`))"
      - "traefik.http.routers.dashboard.entrypoints=websecure"
      - "traefik.http.routers.dashboard.service=api@internal"
      - "traefik.http.routers.dashboard.middlewares=auth"
      - "traefik.http.routers.dashboard.tls.certresolver=myresolver"
      - "traefik.http.middlewares.auth.basicauth.users=admin:$$apr1$$lhT.PLfv$$IYVsw9NEFXKBI7CulMXPF0"

    deploy:
      update_config:
        order: stop-first

  portainer:
    image: portainer/portainer-ce:latest
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.portainer.rule=Host(`${HOST_NAME}`) && PathPrefix(`/portainer`)"
      - "traefik.http.routers.portainer.middlewares=stripPathPortainer"
      - "traefik.http.services.portainer.loadbalancer.server.port=9000"
      - "traefik.http.routers.portainer.entrypoints=websecure"
      - "traefik.http.routers.portainer.tls.certresolver=myresolver"
      - "traefik.http.middlewares.stripPathPortainer.stripPrefix.prefixes=/portainer"
    volumes:
        - "data:/data"
        - "/var/run/docker.sock:/var/run/docker.sock"
    deploy:
      update_config:
        order: stop-first

  backend:
    image: ghcr.io/pawelataman/hello-word-api:latest
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`${HOST_NAME}`) && PathPrefix(`/backend`)"
      - "traefik.http.routers.backend.entrypoints=websecure"
      - "traefik.http.services.backend.loadbalancer.server.port=3000"
      - "traefik.http.routers.backend.tls.certresolver=myresolver"
      - "traefik.http.routers.backend.middlewares=stripPathBackend"
      - "traefik.http.middlewares.stripPathBackend.stripPrefix.prefixes=/backend"
    environment:
      - DB_URL=${DB_URL}
      - CLERK_SECRET_KEY=${CLERK_SECRET_KEY}
    depends_on:
      - db
    deploy:
      update_config:
        order: start-first

  db:
    image: postgres:latest
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5432:5432"
    command: [ "postgres", "-c", "log_statement=all" ]
    volumes:
      - postgres_data:/var/lib/postgresql/data  # Persist data across container restarts

volumes:
  letsencrypt:
  data:
  postgres_data:
    driver: local


