// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: quiz.sql

package db

import (
	"context"
)

const getQuizQuestions = `-- name: GetQuizQuestions :many
SELECT words.id, words.en, words.pl
FROM words
ORDER BY RANDOM()
LIMIT $1
`

type GetQuizQuestionsRow struct {
	ID int32
	En string
	Pl string
}

func (q *Queries) GetQuizQuestions(ctx context.Context, limit int32) ([]GetQuizQuestionsRow, error) {
	rows, err := q.db.Query(ctx, getQuizQuestions, limit)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []GetQuizQuestionsRow
	for rows.Next() {
		var i GetQuizQuestionsRow
		if err := rows.Scan(&i.ID, &i.En, &i.Pl); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
